<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Random Value Distributor</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            line-height: 1.6;
        }
        h1 {
            color: #2c3e50;
            text-align: center;
        }
        .container {
            background-color: #f9f9f9;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        textarea, input {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }
        button:hover {
            background-color: #2980b9;
        }
        .result {
            margin-top: 20px;
            padding: 15px;
            background-color: #e8f4fc;
            border-radius: 4px;
            display: none;
        }
        .input-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Random Value Distributor</h1>
        
        <div class="input-group">
            <label for="values">Enter values to distribute (one per line):</label>
            <textarea id="values" rows="5" placeholder="100
50
25
..."></textarea>
        </div>
        
        <div class="input-group">
            <label for="recipients">Enter recipient names (one per line):</label>
            <textarea id="recipients" rows="5" placeholder="Alice
Bob
Charlie
..."></textarea>
        </div>
        
        <div class="input-group">
            <label for="distribution-type">Distribution Method:</label>
            <select id="distribution-type">
                <option value="equal">Equal Distribution (if possible)</option>
                <option value="random">Completely Random</option>
                <option value="roundrobin">Round Robin</option>
            </select>
        </div>
        
        <button onclick="distribute()">Distribute Values</button>
        
        <div id="result" class="result"></div>
    </div>

    <script>
        function distribute() {
            // Get input values
            const valuesText = document.getElementById('values').value;
            const recipientsText = document.getElementById('recipients').value;
            const distributionType = document.getElementById('distribution-type').value;
            
            // Parse inputs
            const values = valuesText.split('\n').filter(v => v.trim() !== '');
            const recipients = recipientsText.split('\n').filter(r => r.trim() !== '');
            
            if (values.length === 0 || recipients.length === 0) {
                alert('Please enter both values and recipients!');
                return;
            }
            
            // Distribute based on selected method
            let distribution;
            switch(distributionType) {
                case 'equal':
                    distribution = distributeEqually(values, recipients);
                    break;
                case 'random':
                    distribution = distributeRandomly(values, recipients);
                    break;
                case 'roundrobin':
                    distribution = distributeRoundRobin(values, recipients);
                    break;
                default:
                    distribution = distributeRandomly(values, recipients);
            }
            
            // Display results
            displayResults(distribution);
        }
        
        function distributeEqually(values, recipients) {
            const result = {};
            const valuesPerRecipient = Math.floor(values.length / recipients.length);
            const extraValues = values.length % recipients.length;
            
            // Shuffle recipients for fairness
            const shuffledRecipients = [...recipients].sort(() => Math.random() - 0.5);
            
            // Shuffle values
            const shuffledValues = [...values].sort(() => Math.random() - 0.5);
            
            let valueIndex = 0;
            for (let i = 0; i < shuffledRecipients.length; i++) {
                const recipient = shuffledRecipients[i];
                const count = valuesPerRecipient + (i < extraValues ? 1 : 0);
                
                result[recipient] = shuffledValues.slice(valueIndex, valueIndex + count);
                valueIndex += count;
            }
            
            return result;
        }
        
        function distributeRandomly(values, recipients) {
            const result = {};
            recipients.forEach(r => result[r] = []);
            
            // Shuffle values
            const shuffledValues = [...values].sort(() => Math.random() - 0.5);
            
            // Distribute randomly
            shuffledValues.forEach((value, index) => {
                const recipient = recipients[index % recipients.length];
                result[recipient].push(value);
            });
            
            return result;
        }
        
        function distributeRoundRobin(values, recipients) {
            const result = {};
            recipients.forEach(r => result[r] = []);
            
            let recipientIndex = 0;
            values.forEach(value => {
                const recipient = recipients[recipientIndex % recipients.length];
                result[recipient].push(value);
                recipientIndex++;
            });
            
            return result;
        }
        
        function displayResults(distribution) {
            const resultDiv = document.getElementById('result');
            resultDiv.style.display = 'block';
            
            let html = '<h2>Distribution Results</h2>';
            
            for (const [recipient, values] of Object.entries(distribution)) {
                html += `<p><strong>${recipient}:</strong> ${values.join(', ')}</p>`;
            }
            
            resultDiv.innerHTML = html;
        }
    </script>
</body>
</html>